{"version":3,"sources":["components/color-swatches.jsx","components/button.jsx","App.js","index.js"],"names":["ColorSwatches","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","onClick","props","checkWin","style","backgroundColor","colors","Component","Button","type","newColors","App","_this","call","rndHexValue","values","map","item","Math","floor","random","length","hexToRGB","hex","state","r","parseInt","slice","g","b","concat","e","isWin","disabled","swatch","document","getElementsByClassName","i","target","parentNode","setState","message","showColor","showButton","box","componentDidMount","correctColor","error","isLoaded","_this2","fetch","then","res","json","data","_this$state","color_swatches_ColorSwatches","button_Button","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.fb02c749.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../containers/color-swatches.css\";\r\n\r\nexport class ColorSwatches extends Component {\r\n  render() {\r\n    return (//renders the color blocks for the game\r\n      <div className=\"flex-container\">\r\n        <div className=\"container\" onClick={this.props.checkWin}>\r\n          <div className=\"box\">\r\n            <div\r\n              className=\"swatch\"\r\n              style={{ backgroundColor: this.props.colors[0].value }}\r\n            />\r\n          </div>\r\n          <div className=\"box\">\r\n            <div\r\n              className=\"swatch\"\r\n              style={{ backgroundColor: this.props.colors[1].value }}\r\n            />\r\n          </div>\r\n          <div className=\"box\">\r\n            <div\r\n              className=\"swatch\"\r\n              style={{ backgroundColor: this.props.colors[2].value }}\r\n            />\r\n          </div>\r\n          <div className=\"box\">\r\n            <div\r\n              className=\"swatch\"\r\n              style={{ backgroundColor: this.props.colors[3].value }}\r\n            />\r\n          </div>\r\n          <div className=\"box\">\r\n            <div\r\n              className=\"swatch\"\r\n              style={{ backgroundColor: this.props.colors[4].value }}\r\n            />\r\n          </div>\r\n          <div className=\"box\">\r\n            <div\r\n              className=\"swatch\"\r\n              style={{ backgroundColor: this.props.colors[5].value }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Button extends Component {\r\n  render() {\r\n    return (//button to get new colors\r\n      <div>\r\n        <button type=\"button\" onClick={this.props.newColors}>\r\n          Play Again\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ColorSwatches } from \"./components/color-swatches\";\r\nimport { Button } from \"./components/button\";\r\nimport \"./containers/app.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      colors: [],\r\n      hex: \"\",\r\n      disabled: false,\r\n      message: \"\",\r\n      showButton: false,\r\n      showColor: false\r\n    };\r\n  }\r\n\r\n  //getting 6 colors from noops hexbot api\r\n  componentDidMount() {\r\n    fetch(\"http://api.noopschallenge.com/hexbot?count=6\")\r\n      .then(res => res.json())\r\n      .then(\r\n        data => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            colors: data.colors,\r\n            hex: this.rndHexValue(data.colors),\r\n            disabled: false,\r\n            message: \"\",\r\n            showButton: false,\r\n            showColor: false\r\n          });\r\n        },\r\n        error => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  //select random color\r\n  rndHexValue = colors => {\r\n    const values = colors.map(item => item.value);\r\n    return values[Math.floor(Math.random() * values.length)];\r\n  };\r\n\r\n  //change color hexcode to rgb\r\n  hexToRGB = () => {\r\n    const { hex } = this.state;\r\n    let r = parseInt(hex.slice(1, 3), 16),\r\n      g = parseInt(hex.slice(3, 5), 16),\r\n      b = parseInt(hex.slice(5, 7), 16);\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n  };\r\n\r\n  //check to see if color the clicked on matches random color\r\n  checkWin = e => {\r\n    let isWin = false;\r\n    if (this.state.disabled === false) {\r\n      let swatch = document.getElementsByClassName(\"swatch\");\r\n      for (let i = 0; i < swatch.length; i++) {\r\n        if (//if selected color matches, turn background green\r\n          swatch[i].style.backgroundColor === this.hexToRGB() &&\r\n          e.target.style.backgroundColor === this.hexToRGB()\r\n        ) {\r\n          swatch[i].parentNode.style.backgroundColor = \"rgb(137, 219, 137)\";\r\n          isWin = true;\r\n        } else {//if selected color is not a match, turn background red\r\n          swatch[i].parentNode.style.backgroundColor = \"rgb(231, 97, 97)\";\r\n        }\r\n      }\r\n      //winning/losing messages to be displayed\r\n      if (isWin) {\r\n        this.setState({ message: `Congratulations, You Win!` });\r\n      } else {\r\n        this.setState({\r\n          message: `You Lose. The correct color is: `,\r\n          showColor: true\r\n        });\r\n      }\r\n    }\r\n    //disable clicking on area after win or lose and show \"play again\" button\r\n    this.setState({\r\n      disabled: true,\r\n      showButton: true\r\n    });\r\n  };\r\n\r\n  //refresh componenet for new colors\r\n  newColors = () => {\r\n    let box = document.getElementsByClassName(\"box\");\r\n    for (let i = 0; i < box.length; i++) {\r\n      box[i].style.backgroundColor = \"whitesmoke\";\r\n    }\r\n    this.componentDidMount();\r\n  };\r\n\r\n  //show correct color (used when player selects a wrong match)\r\n  correctColor = () => (\r\n    <div\r\n      className=\"correct-color\"\r\n      style={{ backgroundColor: this.hexToRGB() }}\r\n    />\r\n  );\r\n\r\n  render() {\r\n    const {\r\n      error,\r\n      isLoaded,\r\n      colors,\r\n      showButton,\r\n      message,\r\n      showColor\r\n    } = this.state;\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div>\r\n            <h1>Color Game</h1>\r\n            <h5>{this.hexToRGB()}</h5>\r\n            <div>\r\n              <div>\r\n                <ColorSwatches colors={colors} checkWin={this.checkWin} />\r\n                {\r\n                  <div>\r\n                    <p>{message}</p>\r\n                    {showColor ? this.correctColor() : null}\r\n                  </div>\r\n                }\r\n              </div>\r\n              <div>\r\n                {showButton ? <Button newColors={this.newColors} /> : null}\r\n              </div>\r\n              <p>\r\n                To play this game look at the RGB (red, green, blue) numbers\r\n                above and choose which of the six blocks is the correct color.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './containers/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}